# # See https://wiki.hyprland.org/Configuring/Monitors/
# monitor=,preferred,auto,auto

#
# Propably will need to somehow relod the monitor config on 
# dock disconnect, or lid closing or something
#

exec-once = ~/.config/hypr/scripts/bindWorkspaces.sh

# Monitor legend
# 3 | 2 | 1
$monitor_1 = desc:BNQ BenQ GL2480 ET91L00974SL0
$monitor_2 = desc:BNQ BenQ GL2480 ETB3L01311SL0
$monitor_3 = desc:Samsung Display Corp. 0x4208

# Home Monitors
monitor = $monitor_3, 1920x1200, -1920x0, 1
monitor = $monitor_2, 1920x1080, 0x0, 1
monitor = $monitor_1, 1920x1080, 1920x0, 1

monitor = , preferred, auto, 1

# Set default workspaces for home monitors
# workspace = 1, $monitor_1, default:true
# workspace = 1, monitor:desc:BNQ BenQ GL2480 ET91L00974SL0, default:true
# workspace = 2, monitor:desc:BNQ BenQ GL2480 ETB3L01311SL0, default:true
# workspace = 3, monitor:desc:Samsung Display Corp. 0x4208, default:true


# disable notbook display when lid is closed
bindl = ,switch:off:Lid Switch, exec, hyprctl keyword monitor "desc:Samsung Display Corp. 0x4208, 1920x1200, -1920x0, 1"
bindl = ,switch:on:Lid Switch, exec, hyprctl keyword monitor "desc:Samsung Display Corp. 0x4208, disable"
# TODO: only trigger the lock, when notbook is not docked or not charging or something
# bindl = ,switch:Lid Switch, exec, hyprlock --immediate

# bind = ALT SHIFT, S, exec, ~/.config/hypr/swapmonitors.sh $monitor_1 $monitor_2
# bind = ALT SHIFT, S, exec, ~/.config/hypr/scripts/getMonitorByDesc.sh $monitor_1
$autoExpand = ~/.config/hypr/scripts/autoExpand.sh

bind = ALT SHIFT, S, exec, $autoExpand "hyprctl keyword monitor "

# bind = ALT SHIFT, S, swapactiveworkspaces, 1 2
# bind = ALT SHIFT, S, exec, hyprctl dispatch swapactiveworkspaces '1' %monitor_1

# $monitor_name_1 = ./getMonitorByDesc $monitor_1
# $monitor_name_2 = ./getMonitorByDesc $monitor_2
# exec, ./autoexpand "hyprctl dispatch swapactiveworkspaces {$monitor_1} {$monitor_2}"
# exec, ./autoexpand "hyprctl keyword monitor {/"}{$monitor_3}, 1920x1200, -1920x0, 1{/"}"
# exec, ./autoexpand "hyprctl dispatch swapactiveworkspaces {$monitor_name_1} {$monitor_name_2}"
